# SCHEMA README:
# - use singular form for map container, where order doesn't matter
# - use plural form for array container, where order matters
config:
  default: axg-101

axg-101: # arbitary app-id
  config: #app/keyword. app configuration
    title: Appxigon 101 Talk Slides
    version: 0.1.0
    vars: # arbitary app wide variables container
    data: # keyword. Defineds shared data sources
    class: # keyword. Default CSS class names for components
      appxigon: container
      view:
      group:
      item:
    default: slide-cover #view/keyword. default view-id
    layout: #views/attribute. ordered views as top level template
      - header
      - _main #special keyword. Placeholder of the dynamic view
      - footer
    signal: #keyword/app. app level signal handling
      Enter: # standard DOM key name
        uri: .nextView
        params:
          step: 1
          views:
            - slide-cover
            - slide-speakers
            - slide-current-project
            - slide-intro
      ArrowRight: # standard DOM key name
        uri: .nextView
        params:
          step: 1
          views:
            - slide-cover
            - slide-speakers
            - slide-current-project
            - slide-intro
      ArrowLeft:
        uri: .nextView
        params:
          step: -1
          views:
            - slide-cover
            - slide-speakers
            - slide-current-project
            - slide-intro
    view: # configurations applicable to all views
          actions:
            - call:
                uri: .transitClass
                params:
                  name: view-transition-effect
                  timeout: 1000 # ms
  slide-cover: # view-id (arbitary)
    config: #view/config
      title: #view/config/attribute. Defaults to "Slide Cover" (from id)
      layout: [ main, speakers ]
    main: # arbitary group-id
      - logo:
          type: display
          value: div
          class: logo
      - content: #appxigon item-id
          type: display #appxigon item-type/sub-type
          content: |
            Less is more
            ============
            Beyond Technical Frameworks
  slide-speakers:
    config: #view/config
      layout: [ main, footnote ]
    main: # arbitary group-id
      - content: #appxigon item-id
          type: display #appxigon item-type/sub-type
          content: |
            Who are we?
            ============
      - speakers:
          class: speakers-list
          type: select/list
          data:
            default:
              - value: roger
                text:  Roger LAM
              - value: siegfried
                text:  Siegfried GRIMBEEK
  slide-current-project:
    config: #view/config
      layout: [ main, sidepic ]
    main: # arbitary group-id
      - content: #appxigon item-id
          type: display #appxigon item-type/sub-type
          content: |
            Our current project:
            ============
            Disruptive SaaS Business Information System
            ----------
              * REA (Accounting)
              * DMS

            Cool Technical Stack
            ----------
              * Clojure (server)
              * ClojureScript (client)
              * Datomic (Database)

            We are hiring!
            ----------
              * Are you a dynamic self starter?
              * Join us now!
    sidepic: # arbitary group-id
      - content:
          type: display
          value: div
  slide-intro:
    config: #view/config
      layout: [ main, sidepic ]
    main: # arbitary group-id
      - content: #appxigon item-id
          type: display #appxigon item-type/sub-type
          content: |
            Scope:
            ============
              * General application
              * Front end / UI

            What to expect?
            ============
              * Ideas, probably new
              * Technical implementation detail sharing and discussion
              * A bit high level principles if technical detail is too much
              * Some fun
    sidepic: # arbitary group-id
      - content:
          type: display
          value: div



  slide-intro-less-is-more:

  slide-problem:

  slide-proposal:

  slide-future:

  slide-conclusion:

  feedback: # view-id
    config: #view/config
      title: #view/config/attribute
      layout: #view/config/attribute
        - main
        - misc
    main: # arbitary group-id
      - audience-feedback-input:
          type: emoji-input # custom item-type
      - audience-feedback-display:
          type: emoji-display # custom item-type
    misc: # arbitary group-id
      - statistics :
          type: display

  header: # view-id 'header' specified as in view.template
    footer: #axg-word/view. footer view to be rendered last
    config:
      class: custom-footer-view #overwrites default class of 'view'
      layout:
        - default
    default: # Here 'default' is just an arbitary group id. items should be contained in group id
      - config:
          class: 'custom-footer-group' # special item to indicate custom class if items are indicated as array
      - logo:
          type: response-form
